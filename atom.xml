<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一谷</title>
  
  <subtitle>Rest in the Hope.</subtitle>
  <link href="https://galaxy-ht.github.io/atom.xml" rel="self"/>
  
  <link href="https://galaxy-ht.github.io/"/>
  <updated>2021-11-12T18:12:37.925Z</updated>
  <id>https://galaxy-ht.github.io/</id>
  
  <author>
    <name>yicoo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Matplotlib绘图</title>
    <link href="https://galaxy-ht.github.io/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/"/>
    <id>https://galaxy-ht.github.io/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/</id>
    <published>2021-11-07T17:41:31.000Z</published>
    <updated>2021-11-12T18:12:37.925Z</updated>
    
    <content type="html"><![CDATA[<p><a href="#0">写在前面的废话</a><br><a href="#1">曲线图</a><br><a href="#2">散点图</a><br><a href="#3">柱状图</a><br><a href="#4">饼图</a><br><a href="#5">面积图</a><br><a href="#6">直方图</a><br><a href="#7">箱型图</a><br><a href="#8">3D图</a></p><h3 id="0"> 0.写在前面的废话 </h3>用Matplotlib绘图主要有两种方法：<p>一、pyplot绘图<br>第一种是最常见的，即通过调用pyplot的api<code>import matplotlib.pyplot as plt</code>的plt去直接绘图<br>这种方式主要用于交互式绘图和编程绘图生成简单图例。</p><p>二、面向对象的API<br>Matplotlib的核心是面向对象的。如果需要对 plots 进行更多控制和自定义，我们建议直接使用对象。<br>在许多情况下，您将使用 pyplot.subplots创建一个 图形和一个或多个轴，然后处理这些对象。<br>这种方法是我们需要去掌握的，也是比较推荐使用的，即用<code>fig, ax = plt.subplots()</code><br>指定figure和axes，然后对axes单独操作。</p><center><p><img src="/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/1.jpg"><br><font color="gray">figure axes axis（图片源于网络）</font></p></center><p>这种方式较pyplot的方式可以进行更细致的精调。</p><p>三、两种方式的区别<br>两种绘图方式plt.plot()和ax.plot()有什么区别呢</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#第一种方式</span><br><span class="line">plt.figure()</span><br><span class="line">plt.plot([1, 2, 3], [4, 5, 6])</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"># 第二种方式</span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">ax.plot([1, 2, 3], [4, 5, 6])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>先来看看它们各自生成的结果</p><center><p><img src="/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/2.png"><br><font color="gray">第一种方式</font><br><br><br><img src="/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/3.png"><br><font color="gray">第二种方式</font></p></center><p>可以发现它们生成的图像完全一致。</p><p>但从代码来看，第一种方式先生成了一个Figure画布，然后在这个画布上隐式生成一个画图区域进行画图。<br>第二种方式同时生成了Figure和axes两个对象，然后用ax对象在其区域内进行绘图。显然第二种方式更加易于解释，<br>生成的fig和ax分别对画布Figure和绘图区域Axes进行控制，第一种方式反而显得不是很直观，如果涉及到子图零<br>部件的设置，第二种方式显然会更易于使用。</p><p>这里主要以近期作业为实例介绍Matplotlib绘图的方法。</p><h3 id="1"> 1.曲线图 </h3>利用plt.plot绘制股票趋势图。<p>完整代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"># 导入所需包</span><br><span class="line">import numpy as np </span><br><span class="line">import pandas as pd</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 导入数据集</span><br><span class="line">google = pd.read_csv(&#x27;C:/Users/一谷/Desktop/PythonData/GOOGL_data.csv&#x27;)</span><br><span class="line">facebook = pd.read_csv(&#x27;C:/Users/一谷/Desktop/PythonData/FB_data.csv&#x27;)</span><br><span class="line">apple = pd.read_csv(&#x27;C:/Users/一谷/Desktop/PythonData/AAPL_data.csv&#x27;)</span><br><span class="line">amazon = pd.read_csv(&#x27;C:/Users/一谷/Desktop/PythonData/AMZN_data.csv&#x27;)</span><br><span class="line">microsoft = pd.read_csv(&#x27;C:/Users/一谷/Desktop/PythonData/MSFT_data.csv&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 创建画布，figsize指定长和宽（英寸）；dpi指定每英寸分辨率，默认80</span><br><span class="line">plt.figure(figsize=(16, 8), dpi=100)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 绘曲线图，指定x、y值和标签</span><br><span class="line">plt.plot(&#x27;date&#x27;, &#x27;close&#x27;, data=google, label=&#x27;Google&#x27;)</span><br><span class="line">plt.plot(&#x27;date&#x27;, &#x27;close&#x27;, data=facebook, label=&#x27;Facebook&#x27;)</span><br><span class="line">plt.plot(&#x27;date&#x27;, &#x27;close&#x27;, data=apple, label=&#x27;Apple&#x27;)</span><br><span class="line">plt.plot(&#x27;date&#x27;, &#x27;close&#x27;, data=amazon, label=&#x27;Amazon&#x27;)</span><br><span class="line">plt.plot(&#x27;date&#x27;, &#x27;close&#x27;, data=microsoft, label=&#x27;Microsoft&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 指定x，y的起始位与终止位及它们间的步长；rotation表示刻度lables的倾斜度</span><br><span class="line">plt.xticks(np.arange(0, 1260, 40), rotation=70)</span><br><span class="line">plt.yticks(np.arange(0, 1450, 100))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#指定标题与轴lable及它们的大小</span><br><span class="line">plt.title(&#x27;Stock trend&#x27;, fontsize=16)</span><br><span class="line">plt.ylabel(&#x27;Closing price in $&#x27;, fontsize=14)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 显示网格</span><br><span class="line">plt.grid()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 展示曲线图像标签</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><center><p><img src="/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/4.png"><br><font color="gray">五家公司的股票趋势图</font></p></center><h3 id="2"> 2.散点图 </h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib. pyplot as plt </span><br><span class="line">import numpy as np</span><br><span class="line">x = np. array ([1, 2, 3, 4, 5, 6, 7, 8])  </span><br><span class="line">y = np. array ( [1,4, 9, 16, 7, 11, 23, 18])</span><br><span class="line">plt.scatter(x, y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id><a href="#" class="headerlink" title></a></h1><center><p><img src="/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/5.png"><br><font color="gray">散点图<br></font></p></center><h1 id="-1"><a href="#-1" class="headerlink" title></a></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 散点图加颜色</span><br><span class="line">import matplotlib. pyplot as plt </span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line"># 首先有图(fig)，然后有轴(ax)</span><br><span class="line">fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(7, 5), dpi=100)</span><br><span class="line"></span><br><span class="line">x = np.array([5, 7, 8, 7, 2, 17, 2, 9, 4, 11, 12, 9, 6])</span><br><span class="line">y = np.array([99, 86, 105, 87, 86, 103, 87, 94, 78, 77, 85, 86, 99])</span><br><span class="line">plt.scatter(x, y, color=&#x27;hotpink&#x27;)</span><br><span class="line"></span><br><span class="line">x = np.array([2, 2, 8, 1, 15, 8, 12, 9, 7, 3, 11, 4, 7])</span><br><span class="line">y = np.array([100, 105, 84, 105, 90, 99, 95, 94, 100, 79, 112, 91, 80])</span><br><span class="line">plt.scatter(x, y, color=&#x27;green&#x27;)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="-2"><a href="#-2" class="headerlink" title></a></h1><center><p><img src="/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/6.png"><br><font color="gray">散点图加颜色<br></font></p></center><h1 id="-3"><a href="#-3" class="headerlink" title></a></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 设置数据点大小，并显示colorbar</span><br><span class="line">import matplotlib. pyplot as plt </span><br><span class="line">import numpy as np</span><br><span class="line">from numpy.core.defchararray import array</span><br><span class="line"></span><br><span class="line">x = np.array([1, 2, 3, 4, 5, 6, 7])</span><br><span class="line">y = np.array([1, 4, 9, 16, 25, 36, 49])</span><br><span class="line"></span><br><span class="line"># sizes = np.array([……])</span><br><span class="line">sizes = np.random.randint(500, size=x.shape)</span><br><span class="line"></span><br><span class="line"># 首先有图(fig)，然后有轴(ax)</span><br><span class="line">fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(7, 5), dpi=100)</span><br><span class="line"></span><br><span class="line"># 绘制散点图</span><br><span class="line">plt.scatter(x, y, s=sizes)</span><br><span class="line">plt.colorbar()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="-4"><a href="#-4" class="headerlink" title></a></h1><center><p><img src="/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/7.png"><br><font color="gray">设置散点图大小与色板<br></font></p></center><h1 id="-5"><a href="#-5" class="headerlink" title></a></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># 设置透明程度，即气泡图</span><br><span class="line">import matplotlib. pyplot as plt </span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line"># 随机数生成器的种子</span><br><span class="line"># np.random.seed(12)</span><br><span class="line"></span><br><span class="line"># 支持中文与负号</span><br><span class="line">plt.rcParams[&#x27;font.sans-serif&#x27;] = [&#x27;SimHei&#x27;] # 用来正常显示中文标签</span><br><span class="line">plt.rcParams[&#x27;axes.unicode_minus&#x27;] = False # 用来正常显示负号</span><br><span class="line"></span><br><span class="line">N = 50</span><br><span class="line">x = np.random.rand(N)</span><br><span class="line">y = np.random.rand(N)</span><br><span class="line">colors = np.random.rand(N)</span><br><span class="line">area = (30 * np.random.rand(N))**2 # 0 to 15 point radii</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 首先有图(fig)，然后有轴(ax)</span><br><span class="line">fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(7, 5), dpi=100)</span><br><span class="line"></span><br><span class="line"># 绘制气泡图</span><br><span class="line">plt.scatter(x, y, s=area ,c=colors, alpha=0.5) # 设置颜色即透明度</span><br><span class="line"></span><br><span class="line">plt.title(&quot;气泡图&quot;) # 设置标题</span><br><span class="line">plt.colorbar()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="-6"><a href="#-6" class="headerlink" title></a></h1><center><p><img src="/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/8.png"><br><font color="gray">气泡图<br></font></p></center><h1 id="-7"><a href="#-7" class="headerlink" title></a></h1><h3 id="3"> 3.柱状图 </h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib. pyplot as plt </span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line"># 生成序列并随机排列</span><br><span class="line">value = np.arange(3,8)</span><br><span class="line">np.random.shuffle(value)</span><br><span class="line"></span><br><span class="line"># 绘制柱状图</span><br><span class="line">lables = [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;, &#x27;E&#x27;]</span><br><span class="line">plt.bar(lables, value, width=0.5)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="-8"><a href="#-8" class="headerlink" title></a></h1><center><p><img src="/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/9.png"><br><font color="gray">柱状图（单序列）<br></font></p></center><h1 id="-9"><a href="#-9" class="headerlink" title></a></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 两个序列</span><br><span class="line">import matplotlib. pyplot as plt </span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line"># 生成序列并随机排列</span><br><span class="line">size = 5</span><br><span class="line">value1 = np.random.randint(10, size=(size, 1)).reshape(1,-1)</span><br><span class="line">value1 = value1[0]</span><br><span class="line">value2 = np.random.randint(20, size=(size, 1)).reshape(1,-1)</span><br><span class="line">value2 = value2[0]</span><br><span class="line"># value1 = np.random.random(size=size)</span><br><span class="line"># value2 = np.random.random(size=size)</span><br><span class="line"></span><br><span class="line"># 绘制柱状图</span><br><span class="line">width=0.4</span><br><span class="line">x = np.arange(size)</span><br><span class="line">plt.bar(x-width/2, value1, width=width, label=&#x27;A&#x27;)</span><br><span class="line">plt.bar(x+width/2, value2, width=width, label=&#x27;B&#x27;)</span><br><span class="line"></span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="-10"><a href="#-10" class="headerlink" title></a></h1><center><p><img src="/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/10.png"><br><font color="gray">柱状图（两个序列）<br></font></p></center><h1 id="-11"><a href="#-11" class="headerlink" title></a></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># 3个序列+网格</span><br><span class="line">import matplotlib. pyplot as plt </span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line"># 生成序列并随机排列</span><br><span class="line">size = 5</span><br><span class="line">x = np.arange(size)</span><br><span class="line">a = np.random.random(size)</span><br><span class="line">b = np.random.random(size)</span><br><span class="line">c = np.random.random(size)</span><br><span class="line"></span><br><span class="line"># 总宽度，序列数</span><br><span class="line">total_width, n = 0.8, 3</span><br><span class="line"># 单个序列宽度</span><br><span class="line">width = total_width / n</span><br><span class="line"># 第一个序列坐标</span><br><span class="line">x = x - (total_width - width) / 2</span><br><span class="line"></span><br><span class="line"># 绘制柱状图</span><br><span class="line">plt.bar(x, a, width=width, label=&#x27;A&#x27;)</span><br><span class="line">plt.bar(x+width, b, width=width, label=&#x27;B&#x27;)</span><br><span class="line">plt.bar(x+width*2, c, width=width, label=&#x27;C&#x27;)</span><br><span class="line"></span><br><span class="line"># 网格线</span><br><span class="line"># plt.grid(linestyle=&#x27;:&#x27;, linewidth=1)</span><br><span class="line">plt.rcParams[&quot;axes.grid.axis&quot;] = &quot;y&quot;</span><br><span class="line">plt.rcParams[&quot;axes.grid&quot;] = True</span><br><span class="line"># 水平线与垂直线</span><br><span class="line">plt.axhline(y=0.5, ls=&#x27;:&#x27;, c=&quot;red&quot;)</span><br><span class="line">plt.axvline(x=np.mean(x), ls=&quot;--&quot;, c=&quot;green&quot;)</span><br><span class="line"></span><br><span class="line"># 坐标</span><br><span class="line">xlabels = [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;, &#x27;E&#x27;]</span><br><span class="line">plt.xticks(np.arange(len(xlabels)), xlabels)</span><br><span class="line"></span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="-12"><a href="#-12" class="headerlink" title></a></h1><center><p><img src="/2021/11/08/Matplotlib%E7%BB%98%E5%9B%BE/11.png"><br><font color="gray">柱状图（三个序列）+网格线<br></font></p></center><h1 id="-13"><a href="#-13" class="headerlink" title></a></h1><h3 id="4"> 4.面积图 </h3><h3 id="5"> 5.饼图 </h3><h3 id="6"> 5.直方图 </h3><h3 id="7"> 6.箱型图 </h3><h3 id="8"> 7.3D图 </h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;#0&quot;&gt;写在前面的废话&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#1&quot;&gt;曲线图&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#2&quot;&gt;散点图&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#3&quot;&gt;柱状图&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#4&quot;&gt;饼图&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#5&quot;&gt;面</summary>
      
    
    
    
    
    <category term="Python" scheme="https://galaxy-ht.github.io/tags/Python/"/>
    
    <category term="数据可视化" scheme="https://galaxy-ht.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>是谁住在深海的大菠萝里~~</title>
    <link href="https://galaxy-ht.github.io/2021/10/23/Hello-world-0/"/>
    <id>https://galaxy-ht.github.io/2021/10/23/Hello-world-0/</id>
    <published>2021-10-22T17:02:40.000Z</published>
    <updated>2021-11-09T00:54:39.156Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/23/Hello-world-0/%E6%B5%B7%E7%BB%B5%E5%AE%9D%E5%AE%9D.jpg"><br>海绵宝宝！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/23/Hello-world-0/%E6%B5%B7%E7%BB%B5%E5%AE%9D%E5%AE%9D.jpg&quot;&gt;&lt;br&gt;海绵宝宝！&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="The first page." scheme="https://galaxy-ht.github.io/tags/The-first-page/"/>
    
  </entry>
  
</feed>
